// Task 11-13 Test Scenarios
console.log('ðŸ§ª Testing Task 11-13: Cleanup System');

// Test senaryolarÄ±:
const testScenarios = [
    {
        name: "Task 11: Silme zamanÄ±nÄ± kaydet",
        description: "GeÃ§ici Ã¼rÃ¼n oluÅŸturulduÄŸunda metafield ile silme zamanÄ± kaydedilir",
        steps: [
            "1. Product configurator ile Ã¼rÃ¼n oluÅŸtur",
            "2. Admin panelde Products > All products'ta 'geÃ§ici-Ã¼rÃ¼n' tag'i ara",
            "3. ÃœrÃ¼nÃ¼n metafield'inde cleanup_at zamanÄ±nÄ± kontrol et",
            "4. Zaman = oluÅŸturma zamanÄ± + 2 saat olmalÄ±"
        ],
        expected: "Metafield: custom.cleanup_at = ISO string (oluÅŸturma + 2 saat)"
    },

    {
        name: "Task 12: Otomatik temizlik",
        description: "Her 5 dakikada expired Ã¼rÃ¼nler otomatik silinir",
        steps: [
            "1. BirkaÃ§ geÃ§ici Ã¼rÃ¼n oluÅŸtur",
            "2. Manuel cleanup butonu ile test et: /apps/cleanup-manual",
            "3. 2 saat+ eski Ã¼rÃ¼nlerin silindiÄŸini kontrol et",
            "4. Yeni Ã¼rÃ¼nlerin silinmediÄŸini kontrol et"
        ],
        expected: "Console: 'Cleanup completed: X deleted, Y errors'"
    },

    {
        name: "Task 13: SipariÅŸli Ã¼rÃ¼n gÃ¼venliÄŸi",
        description: "SipariÅŸe girmiÅŸ Ã¼rÃ¼nler de 2 saat sonra silinir",
        steps: [
            "1. GeÃ§ici Ã¼rÃ¼n oluÅŸtur ve sepete ekle",
            "2. Checkout'a git (sipariÅŸ verme simÃ¼lasyonu)",
            "3. 2 saat sonra manuel cleanup Ã§alÄ±ÅŸtÄ±r",
            "4. ÃœrÃ¼nÃ¼n silindiÄŸini, ama sipariÅŸ history'nin bozulmadÄ±ÄŸÄ±nÄ± kontrol et"
        ],
        expected: "ÃœrÃ¼n silinir, sipariÅŸ kaydÄ± korunur"
    }
];

console.log('\nðŸ“‹ Test Checklist:');
testScenarios.forEach((scenario, index) => {
    console.log(`\n${index + 1}. ${scenario.name}`);
    console.log(`   Description: ${scenario.description}`);
    console.log(`   Expected: ${scenario.expected}`);
    console.log(`   Steps:`);
    scenario.steps.forEach(step => console.log(`     ${step}`));
});

console.log('\nðŸ”§ Manual Test Commands:');
console.log('- Create product: Use configurator on product page');
console.log('- Manual cleanup: POST to /apps/cleanup-manual');
console.log('- Check products: Admin > Products > filter by "geÃ§ici-Ã¼rÃ¼n"');
console.log('- Check metafields: GraphQL API or product admin page');

console.log('\nâœ… Success Criteria:');
console.log('- Task 11: Metafield cleanup_at correctly set on product creation');
console.log('- Task 12: Expired products (2h+) automatically deleted every 5 min');
console.log('- Task 13: Order history preserved even after product deletion');

// Test helper - metafield kontrol
const metafieldTestQuery = `
query getProductMetafields($id: ID!) {
  product(id: $id) {
    id
    title
    tags
    createdAt
    metafield(namespace: "custom", key: "cleanup_at") {
      value
      type
    }
  }
}
`;

console.log('\nðŸ“Š GraphQL Test Query (Product metafield):');
console.log(metafieldTestQuery);

console.log('\nðŸš€ Ready to test Task 11-13!');